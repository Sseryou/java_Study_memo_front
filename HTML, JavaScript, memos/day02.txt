CSS

1. HTML에 CSS 적용하는 방법
1) style 태그
2) style 속성
3) link 태그 - 외부 css 파일을 연결

2. 선택자
선택자{스타일 속성: 값; 스타일 속성: 값; 스타일 속성: 값.....}
1) 태그 선택자
	* : 모든 태그 - 공통적인 속성



2) 클래스 선택자
- class 속성
.클래스명{......}

3) 아이디 선택자
- id 속성
#아이디명 { ... }
	
4) 스타일 속성으로 적용


5) 조상 자손 선택자

조상선택자 자손 선택자 { ... }

6) 부모 자식 손택자

부모 선택자 > 자식 선택자 

7) 형제 선택자
	1. 일반 형제 선택자
	선택자의 오른쪽 모든 형제
	선택자 ~ 선택자{ ... }

	2. 인접 형태 선택자
	선택자의 바로 오른쪽 형제
	선택자 + 선택자 { ... }

8)그룹 선택자
	선택자, 선택자, 선택자, ... , 선택자 { 공통 스타일 ... }

9) 가상 클래스 선택자
	- 상태를 가지고 선택
		선택자 : 상태 { ... }
			:hover - 마우스 커서가 올라간 상태
			:checked - 체크된 상태 ...
	- 순서를 가지고 선택
		--반드시 부모 태그 있어야 적용 --
		선택자 : first-child - 첫번째 자식 선택
			last-child - 마지막 자식 선택
			nth-child(숫자 또는 수식) - 숫자번째 또는 수식에 해당하는 자식 선택

		--태그의 종류만 가지고 적용 --
		선택자 : first-of-type
		선택자 : last-of-type
		선택자 : nth-of-type
			1, 3, 5, 7, 9
			2n+1
			2, 4, 6, 8, 10 
			2n

	- 가상의 요소를 추가해서 선택
		선택자 : before : 선택자의 자식 요소의 첫번째에 가상의 요소 추가
		선택자 : after : 선택자의 자식 요소의 마지막에 가상의 요소 추가

		=content : "내용"

	-기타
		:not(선택자) : 선택자를 제외하고 선택


3. CSS 적용순서

태그<클래스<아이디<style 속성

같은 우선순위면 뒤에 적용된게 우선순위가 높다.


!important 우선순위 강제적용

4. 속성

	폰트
	font-size : 글자 크기
		절대 사이즈
		px - 화소 기준,

		상대 사이즈 - 기준 사이즈 -> 상대적으로 사이즈 계산
		rem - 기준 : 상위 태그의 폰트 사이즈 - 1rem
		em - 기준 : 바로 위 태그의 폰트 사이즈 - 1em
	
	color : 글자의 색상
		-색상명
		-rgb값 (0 ~ 255), (0 ~ 255), (0 ~ 255)
		-rgba
			a - 알파채널 : 투명도(0~1)
				1 : 불투명
				0 : 투명
		-hex코드 -> rgb -> 16진수 변환
		- #ff(r)00(g)00(b) ->#f00

	text-align : 정렬
		left (기본)
		right (오른쪽)
		center (가운데)
		justify (양쪽 정렬)


	font-weight : 글자 굵기
		normal | bold
		100~900

	font-family : 글꼴을 지정
		맑은 고딕(맥 미포함)
		구글 폰트에서 가져와서 사용 가능

공간
	블록 레벨 요소 (block)
	-줄 개행
	-공간 O (너비, 높이 설정)
	-외부 여백 - 상하좌우(O)
	-내부 여백 O
	div

	인라인 레벨 요소 (inline)
	-줄 개행 X
	-공간 X (너비, 높이 X)
	-외부 여백 - 좌우(O)
	-내부 여백 O
	span

display :
	block; - 블록 레벨로 변경
	inline; - 인라인 레벨로 변경
	inline-block; - 인라인(줄개행 X) + 블록(너비 높이, 상하 외부여백)
	none; - 안보임 처리
		참고)
			visibility : visible - 보임 | hidden - 숨김
			

여백
	내부여백
	padding

	padding-left padding-right padding-top padding-bottom

	외부여백
	margin
		: 20px; - 상하좌우 20px 외부 여백
		: 20px 30px;
		 상, 하  좌, 우
		: 20px 30px 10px;
		상      좌,우     하
		: 20px 30px 10px 40px;    -위에서 시계방향
		  상     우     하    좌
	
	-margin-left : 왼쪽 외부 여백
	-margin-right : 오른쪽 외부 여백
	-margin-top : 위쪽 외부 여백
	-margin-bottom : 아래쪽 외부 여백


레이아웃
box-sizing
	-content-box (기본값)
		- 사이즈를 내용기준으로 결정

	-border-box
		- 사이즈를 경계선을 기준으로 설정

border - 경계선
	
	border-width  : 경계선 두께
	border-style : solid(직선) | dotted(점선) | dashed(-------)
	border-color : 경계선 색깔

	border : 두께 스타일 색상;

border-radius - 경계선을 둥굴게
	      - 50% = 원		

배치
position
	절대 위치
	static - 정적인
	
	상대 위치
	relative
		-기준
			-적용하는 태그(요소)가 위치하고 있는 좌표
	absolute
		-기준
			-문서 전체 또는 상위 태그가 상대적인 위치라면 상위 태그가 기준(relative, absolute, fixed)
	fixed
		-기준
			-viewport 기준
			-보이는 화면 기준

	top - 위에서 아래로
	bottom - 아래에서 위로
	left - 좌 -> 우
	right - 우 -> 좌


	z-index : 요소의 층위 결정
		숫자가 커질수록 앞쪽에 위치



float - 방향에 따라서 떠 다니듯이 배치
	- left
	- right

clear - float 속성을 제거
	-left
	-right
	-both

@media all and (max-width : 기준사이즈){
		-기준사이즈 까지 적용
	          min-width
		-기준사이즈 이상 적용
	CSS -> 기준 사이즈에 선별적으로 적용
}


background : 배경색, 배경 이미지
	-background-color : 배경색
	-background-image : 배경 이미지
		url("이미지 경로");
	-background-image : 배경 이미지 반복
		-repeat-x 좌우반복
		-repeat-y 상하반복
		-no-repeat 반복없음

	-background-position : 배경 이미지 위치
		좌우 상하;   -수치
		
		left|center|right	top|center|bottom
		좌측|가운데|우측	상단|가운데|하단


overflow
	-visible : 넘치더라도 보임
	-hidden : 넘치는 부분 감춤
	-scroll : 스크롤바 생성
	-auto : 자동적으로 처리

transition : 전환 효과
	스타일이 변환될때 -> 애니메이션 효과

	transition-duration : 전환 지속 시간
		초단위(예 - 1s : (1초), 0.5s (0.5초))
	transition-property : 속성명, 속성명.....
	
	transition-timing-funtion :  애니메이션 효과

	transition-delay: 전환 대기 시간
	

	transition 축약
	transition : property(속성) duration(지연시간), timing-function(애니메이션효과), delay(전환발생전 대기시간)

opacity : 투명도
	0(투명) ~ 1(불투명)

flexbox
배치
부모 -> 자식 배치
부모 - display: flex;
	-flex-direction: row;  왼쪽 -> 오른쪽
		       row-reverse 오른쪽 -> 왼쪽
		       column; 위 -> 아래
		       column-reverse; 아래 -> 위

	-align-items : 상하 정렬
		     stretch : 높이를 부모요소에 맞추기
		     flex-start : 위쪽
		     center : 가운데
		     flex-end : 아래쪽

	-justify-content : 좌우 정렬
			 flex-start : 왼쪽
			center : 가운데
			flex-end : 오른쪽

			공백으로 배치
			space-around : 왼쪽과 오른쪽 동일한 공백
			space-evenly : 동일한 여백
			space-between : 요소가 양 끝을 먼저 차지 후 공백 투입

	-flex-wrap : wrap - 줄 개행 | nowrap - 줄 개행x

	-flex-grow : 공백을 비율별로 균등 배분 - 자식요소



		






